on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

env:
  SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
  PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
  LOCAL_CONNECTION_SQL_ULR: ${{ secrets.LOCAL_CONNECTION_SQL_ULR }}
  SQL_HOST: ${{ secrets.SQL_HOST }}
  SQL_USER: ${{ secrets.SQL_USER }}
  SQL_PORT: ${{ secrets.SQL_PORT }}
  SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
  SQL_DATABASE: ${{ secrets.SQL_DATABASE }}



jobs:
  ci:
    name: Deploy to supabase
    runs-on: ubuntu-22.04

    # steps:
    # - uses: actions/checkout@v4
    # - uses: supabase/setup-cli@v1
    # - run: ls
    # - run: supabase link --project-ref $PROJECT_ID
    # - run: supabase functions deploy

    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Create Environment
        run: >
          echo "export const enviroment = {
            LOCAL_PROJECT: false,
            LOCAL_CONNECTION_SQL_ULR:
              '$LOCAL_CONNECTION_SQL_ULR',
            SQL_HOST: 'aws-0-us-west-1.pooler.supabase.com',
            SQL_USER: 'postgres.wykeiyxxemprnqkxcvqo',
            SQL_PORT: '6543',
            SQL_PASSWORD: '@!xdsf5r7pQGU.G',
            SQL_DATABASE: 'postgres',
          };
          " >> ./supabase/functions/expensesManager/tools/enviroment.ts
      - name: "cat file"
        run: cat ./supabase/functions/expensesManager/tools/enviroment.ts
      - name: Install  supabase
        uses: supabase/setup-cli@v1
      - name: Link supabase project
        run: supabase link --project-ref $PROJECT_ID
      - name: Deploy functions to supabase
        run: supabase functions deploy
